# ALEXIKA AI - Docker Compose Configuration
# Provides both development and production environments

version: '3.8'

services:
  # Main ALEXIKA AI application
  alexika-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alexika-ai-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      # Mount source code for development (comment out for production)
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - alexika-network
    labels:
      - "com.alexika.service=frontend"
      - "com.alexika.version=1.0.0"

  # Development server with hot reload
  alexika-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: alexika-ai-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - FAST_REFRESH=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - alexika-network
    profiles:
      - dev
    command: npm run dev

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: alexika-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - alexika-ai
    restart: unless-stopped
    networks:
      - alexika-network
    profiles:
      - production

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: alexika-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_INCLUDE_RESTARTING=true
    restart: unless-stopped
    profiles:
      - auto-update

networks:
  alexika-network:
    driver: bridge
    name: alexika-network